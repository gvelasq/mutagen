% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gen_rowmatch.R
\name{gen_rowmatch}
\alias{gen_rowmatch}
\title{Rowwise match a set of values}
\usage{
gen_rowmatch(data, cols, values)
}
\arguments{
\item{data}{A data frame.}

\item{cols}{<\code{\link[dplyr:dplyr_tidy_select]{tidy-select}}> Columns to search across.}

\item{values}{A list of values to match.}
}
\value{
A binary integer vector indicating whether any supplied value was matched with an integer 1 (\code{1L}), otherwise it returns an integer 0 (\code{0L}).
}
\description{
This function performs a rowwise match of a set of supplied values across columns in a data frame. If any of the row values equal one of the supplied values, this function returns an integer 1 (\code{1L}) for that row, otherwise it returns an integer 0 (\code{0L}).
}
\details{
Parallelization is supported via \href{https://purrr.tidyverse.org/reference/in_parallel.html}{\code{purrr::in_parallel()}}.
}
\examples{
library(dplyr, warn.conflicts = FALSE)
a <- tibble(
  x = 1:3,
  y = rep(NA, 3),
  z = letters[1:3],
  aa = rep(FALSE, 3)
)
val <- list(1, NA, "a", FALSE)
val2 <- list(5, NaN, "d", Inf)
gen_rowmatch(a, values = val)
b <- a \%>\%
  mutate(
    q = gen_rowmatch(., values = val),
    r = gen_rowmatch(., values = val2)
  )
b
}
